name: pytest

on: 
  push:
    branches: 
      - master
      - 'releases/**'
    tags:
      - '*.*.*'
  pull_request:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.7', '3.11']
        db-backend: [mysql, postgres, sqlite3]
      fail-fast: false # TODO: for debugging tests only
    name: "Build (Python: ${{ matrix.python-version }}, DB: ${{ matrix.db-backend }})"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install --yes pandoc texlive-xetex texlive-latex-extra texlive-fonts-recommended lmodern librsvg2-bin gettext
        python -m pip install --upgrade pip
        pandoc --version
    - name: Install rdmo
      run: | 
        pip install -e .[ci]
      if: matrix.db-backend == 'sqlite3'
    - name: Install rdmo[mysql] and start mysql
      run: | 
        pip install -e .[ci,mysql]
        sudo systemctl start mysql.service
      if: matrix.db-backend == 'mysql'
    - name: Install rdmo[postgres] and start postgresql
      run: |
        pip install -e .[ci,postgres]
        sudo systemctl start postgresql.service
        pg_isready
        sudo -u postgres psql --command="CREATE USER postgres_user PASSWORD 'postgres_password' CREATEDB"
      if: matrix.db-backend == 'postgres'
    - name: Prepare Env
      run: |
        cp testing/config/settings/${{ matrix.db-backend }}.py testing/config/settings/local.py
        cp -r testing/media testing/media_root
        mkdir testing/log
    - name: Run Tests
      run: |
        pytest -p no:cacheprovider --cov
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: '${{ matrix.db-backend }}: ${{ matrix.python-version }}'
        COVERALLS_PARALLEL: true

  coveralls:
    name: Indicate completion to coveralls
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Run Coveralls finish
      run: |
        pip install coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
